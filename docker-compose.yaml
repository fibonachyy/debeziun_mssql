version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - my-network
    restart: always

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - 9092:9092
    networks:
      - my-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "1234qwer?"
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "True"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    networks:
      - my-network
    volumes:
      - ./debezium_data:/debezium/data
    restart: always

  kconnect:
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    environment:
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      BOOTSTRAP_SERVERS: kafka:29092
    links:
      - kafka
      - sqlserver
      - postgres

    networks:
      - my-network
    restart: always
    volumes:
      - ./plugins:/kafka/connect-plugins
  postgres:
    build: ./postgres
    ports:
      - 5454:5432
    links:
      - kafka
    networks:
      - my-network
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

networks:
  my-network:
    driver: bridge
